resolver 10.55.53.10;
#lua_code_cache off;

#MASTER upstream
upstream master {
    server www.groundlink.com:81;
}
upstream ssl_master {
    server www.groundlink.com:444;
}

#BETA upstream
upstream beta {
    server www2.groundlink.com:80;
    #server www2.qa.groundlink.us:80;
}

upstream ssl_beta {
    server www2.groundlink.com:443;
    #server www2.qa.groundlink.us:80;
}



server {
    listen       50.97.194.110:80;
    server_name  www.qa.groundlink.us;
    # server_name www.groundlink.dev; 
    # listen 80;

    error_log /usr/local/openresty/nginx/logs/groundlink.com.log warn;
    
	set $root_path /usr/local/openresty/lualib/cpanel;
    set $staging "production";

    # We want to match any request which starts with a username. The brackets capture the username automatically in the Nginx variable $1:
    location =/ {
        set $ab_backend "master";
        set $ab_hostname "www.groundlink.com";

        if (-f $request_filename ) {
          break;
        }
        
        # Google, Yahoo and other bots need to go to master release
        if ($http_user_agent ~* '(yandex|baidu|gigabot|googlebot|libwww-perl|lwp-trivial|orangeask|flebot|mj12bot|surveybot|baiduspider|msnbot|bingbot|adidxbot|aihitbot|siteuptime|slurp|wordpress|zibb|zyborg|yahoo! slurp)'){
            proxy_pass $scheme://master;
            break;
        }

        rewrite_by_lua_file /usr/local/openresty/ab_nginx_proxy/config/ab_testing.lua;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $ab_hostname;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_pass $scheme://master;
        
    }

    location / {
        set $ab_backend "master";
        set $ab_hostname "www.groundlink.com";

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $ab_hostname;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_pass http://$ab_backend;
    }
}

server {
    listen       50.97.194.110:443 ssl;
    server_name  www.qa.groundlink.us;
    # listen 443 default_server ssl;
    # server_name www.groundlink.dev; 
    
    ssl_certificate      /var/www/vhost/groundlink.com/ssl/qa.groundlink.us.crt;
    ssl_certificate_key  /var/www/vhost/groundlink.com/ssl/nginx.qa.groundlink.us.key;

    error_log /usr/local/openresty/nginx/logs/groundlink.dev.log info;
    
    set $root_path /usr/local/openresty/lualib/cpanel;
    set $staging "production";

    location ~ ^/admin/api/ {
        satisfy any;
        allow 65.204.14.54/32;
        allow 217.24.28.250/32;
        deny all;
        auth_basic "closed site";
        auth_basic_user_file /var/www/vhost/groundlink.com/authfile;

        default_type application/json;
        content_by_lua_file $root_path/services.lua;
    }


    location ~ ^/admin/ {
        satisfy any;
        allow 65.204.14.54/32;
        allow 217.24.28.250/32;
        deny all;
        auth_basic "closed site";
        auth_basic_user_file /var/www/vhost/groundlink.com/authfile;

        default_type text/html;
        root $root_path;

        if (-f $request_filename ) {
            rewrite ^ $uri break;
        }
    }
    
    # We want to match any request which starts with a username. The brackets capture the username automatically in the Nginx variable $1:
    location =/ {
        set $ab_backend "master";
        set $ab_hostname "www.groundlink.com";

        
        # Any proxy configuration we need, and other Nginx config if required.

        if (-f $request_filename ) {
          break;
        }
        
        # Google, Yahoo and other bots need to go to master release
        if ($http_user_agent ~* '(yandex|baidu|gigabot|googlebot|libwww-perl|lwp-trivial|orangeask|flebot|mj12bot|surveybot|baiduspider|msnbot|bingbot|adidxbot|aihitbot|siteuptime|slurp|wordpress|zibb|zyborg|yahoo! slurp)'){
            proxy_pass $scheme://ssl_master;
            break;
        }

        rewrite_by_lua_file /usr/local/openresty/ab_nginx_proxy/config/ab_testing.lua;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $ab_hostname;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;

        proxy_pass $scheme://ssl_$ab_backend;
        proxy_redirect  off;
        
    }

    location / {
        set $ab_backend "master";
        set $ab_hostname "www.groundlink.com";
        # Any proxy configuration we need, and other Nginx config if required.

        if (-f $request_filename ) {
          break;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $ab_hostname;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;

        proxy_pass $scheme://ssl_master;
        proxy_redirect  off;

    }
}

